[{"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\auth\\[...nextauth].ts":"1","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\current.ts":"2","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\favorite.ts":"3","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\favorites.ts":"4","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\movies\\index.ts":"5","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\movies\\[movieId].ts":"6","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\random.ts":"7","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\register.ts":"8","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\auth.tsx":"9","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\index.tsx":"10","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\profiles.tsx":"11","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\watch\\[movieId].tsx":"12","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\_app.tsx":"13","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\AccountMenu.tsx":"14","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\Billboard.tsx":"15","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\FavoriteButton.tsx":"16","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\Input.tsx":"17","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\MobileMenu.tsx":"18","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\MovieCard.tsx":"19","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\MovieList.tsx":"20","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\Navbar.tsx":"21","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\NavbarItem.tsx":"22","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\PlayButton.tsx":"23","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\lib\\fetcher.ts":"24","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\lib\\prismadb.ts":"25","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\lib\\serverAuth.ts":"26"},{"size":1839,"mtime":1683016890702,"results":"27","hashOfConfig":"28"},{"size":483,"mtime":1683017644343,"results":"29","hashOfConfig":"28"},{"size":1705,"mtime":1683621228011,"results":"30","hashOfConfig":"28"},{"size":713,"mtime":1683619398172,"results":"31","hashOfConfig":"28"},{"size":557,"mtime":1683614312262,"results":"32","hashOfConfig":"28"},{"size":953,"mtime":1683621974065,"results":"33","hashOfConfig":"28"},{"size":722,"mtime":1683090353130,"results":"34","hashOfConfig":"28"},{"size":1108,"mtime":1681722201017,"results":"35","hashOfConfig":"28"},{"size":3557,"mtime":1710853274580,"results":"36","hashOfConfig":"28"},{"size":1009,"mtime":1683619920054,"results":"37","hashOfConfig":"28"},{"size":2257,"mtime":1683020109686,"results":"38","hashOfConfig":"28"},{"size":1108,"mtime":1683623587250,"results":"39","hashOfConfig":"28"},{"size":178,"mtime":499162500000,"results":"40","hashOfConfig":"28"},{"size":1059,"mtime":1683021966441,"results":"41","hashOfConfig":"28"},{"size":1686,"mtime":1683622406545,"results":"42","hashOfConfig":"28"},{"size":1717,"mtime":1683621396868,"results":"43","hashOfConfig":"28"},{"size":1396,"mtime":1680063180656,"results":"44","hashOfConfig":"28"},{"size":1066,"mtime":1683021089846,"results":"45","hashOfConfig":"28"},{"size":2887,"mtime":1683622873033,"results":"46","hashOfConfig":"28"},{"size":744,"mtime":1683614568318,"results":"47","hashOfConfig":"28"},{"size":3365,"mtime":1683022726015,"results":"48","hashOfConfig":"28"},{"size":312,"mtime":1685277387427,"results":"49","hashOfConfig":"28"},{"size":716,"mtime":1683622875984,"results":"50","hashOfConfig":"28"},{"size":130,"mtime":1683017773068,"results":"51","hashOfConfig":"28"},{"size":200,"mtime":1681716323128,"results":"52","hashOfConfig":"28"},{"size":592,"mtime":1683017336674,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"clvoe",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\auth\\[...nextauth].ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\current.ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\favorite.ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\favorites.ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\movies\\index.ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\movies\\[movieId].ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\random.ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\api\\register.ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\auth.tsx",["137","138"],[],"import Input from \"@/components/Input\";\r\nimport { useCallback, useState, ChangeEvent } from \"react\"; // Import ChangeEvent tá»« react\r\nimport axios from \"axios\";\r\nimport { signIn } from \"next-auth/react\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [variant, setVariant] = useState(\"login\");\r\n\r\n  const toggleVariant = useCallback(() => {\r\n    setVariant((currentVarient) =>\r\n      currentVarient === \"login\" ? \"register\" : \"login\"\r\n    );\r\n  }, []);\r\n\r\n  const login = useCallback(async () => {\r\n    try {\r\n      await signIn(\"credentials\", {\r\n        email,\r\n        password,\r\n        callbackUrl: \"/profiles\",\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [email, password]);\r\n\r\n  const register = useCallback(async () => {\r\n    try {\r\n      await axios.post(\"/api/register\", {\r\n        email,\r\n        name,\r\n        password,\r\n      });\r\n\r\n      login();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [email, name, password, login]);\r\n\r\n  return (\r\n    <div className=\"relative h-full w-full bg-[url('/images/hero.jpg')] bg-no-repeat bg-center bg-fixed bg-cover\">\r\n      <div className=\"bg-black w-full h-full lg:bg-opacity-50\">\r\n        <nav className=\"px-12 py-5\">\r\n          <img src=\"/images/logo.png\" className=\"h-12\" />\r\n        </nav>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"bg-black bg-opacity-70 px-16 py-16 self-center mt-2 lg:w-2/5 lg:max-w-md rounded-md w-full\">\r\n            <h2 className=\"text-white text-4xl mb-8 font-semibold\">\r\n              {variant === \"login\" ? \"Sign in\" : \"Register\"}\r\n            </h2>\r\n            <div className=\"flex flex-col gap-4\">\r\n              {variant === \"register\" && (\r\n                <Input\r\n                  label=\"Username\"\r\n                  onChange={(ev: ChangeEvent<HTMLInputElement>) => setName(ev.target.value)} // Chá» Äá»nh kiá»u dá»¯ liá»u\r\n                  id=\"name\"\r\n                  value={name}\r\n                />\r\n              )}\r\n              <Input\r\n                label=\"Email\"\r\n                onChange={(ev: ChangeEvent<HTMLInputElement>) => setEmail(ev.target.value)} // Chá» Äá»nh kiá»u dá»¯ liá»u\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n              />\r\n              <Input\r\n                label=\"Password\"\r\n                onChange={(ev: ChangeEvent<HTMLInputElement>) => setPassword(ev.target.value)} // Chá» Äá»nh kiá»u dá»¯ liá»u\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={variant === \"login\" ? login : register}\r\n              className=\"bg-red-600 py-3 text-white rounded-md w-full mt-10 hover:bg-red-700 transition\"\r\n            >\r\n              {variant === \"login\" ? \"Login\" : \"Sign up\"}\r\n            </button>\r\n            <p className=\"text-neutral-500 mt-12\">\r\n              {variant === \"login\"\r\n                ? \"First time using Netflix?\"\r\n                : \"Already have an account\"}\r\n              <span\r\n                onClick={toggleVariant}\r\n                className=\"text-white ml-1 hover:underline cursor-pointer\"\r\n              >\r\n                {variant === \"login\" ? \"Create account\" : \"Login\"}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\index.tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\profiles.tsx",["139"],[],"import useCurrentUser from \"@/hooks/useCurrentUser\";\r\nimport { NextPageContext } from \"next\";\r\nimport { getSession } from \"next-auth/react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport async function getServerSideProps(context: NextPageContext) {\r\n  const session = await getSession(context);\r\n\r\n  if (!session) {\r\n    return {\r\n      redirect: {\r\n        destination: \"/auth\",\r\n        permanent: false,\r\n      },\r\n    };\r\n  }\r\n  return {\r\n    props: {},\r\n  };\r\n}\r\n\r\nconst Profiles = () => {\r\n    const {data: user} = useCurrentUser();\r\n    const router = useRouter();\r\n  return (\r\n    <div className=\"flex items-center h-full justify-center\">\r\n        <div className=\"flex flex-col\">\r\n            <h1 className=\"text-3xl md:text-6xl text-white text-center\">Who is watching?</h1>\r\n            <div className=\"flex items-center justify-center gap-8 mt-10\">\r\n                <div onClick={() => router.push('/')}>\r\n\r\n                    <div className=\"group flex-row w-44 mx-auto\">\r\n                        <div \r\n                            className=\"\r\n                            w-44\r\n                            h-44\r\n                            rounded-md\r\n                            flex\r\n                            items-center\r\n                            justify-center\r\n                            border-2\r\n                            border-transparent\r\n                            group-hover:cursor-pointer\r\n                            group-hover:border-white\r\n                            overflow-hidden\r\n                            \"\r\n                        >\r\n                            <img src=\"/images/default-blue.png\" alt=\"Profile\" />\r\n                        </div>\r\n\r\n                        <div\r\n                            className=\"\r\n                            mt-4\r\n                            text-gray-400\r\n                            text-2xl\r\n                            text-center\r\n                            group-hover:text-white\r\n                            \"\r\n                        >\r\n                            {user?.name}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\watch\\[movieId].tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\pages\\_app.tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\AccountMenu.tsx",["140"],[],"import { signOut } from 'next-auth/react';\r\nimport React from 'react';\r\n\r\nimport useCurrentUser from '@/hooks/useCurrentUser';\r\n\r\ninterface AccountMenuProps {\r\n  visible?: boolean;\r\n}\r\n\r\nconst AccountMenu: React.FC<AccountMenuProps> = ({ visible }) => {\r\n  const { data: currentUser } = useCurrentUser();\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-black w-56 absolute top-14 right-0 py-5 flex-col border-2 border-gray-800 flex\">\r\n      <div className=\"flex flex-col gap-3\">\r\n        <div className=\"px-3 group/item flex flex-row gap-3 items-center w-full\">\r\n          <img className=\"w-8 rounded-md\" src=\"/images/default-blue.png\" alt=\"\" />\r\n          <p className=\"text-white text-sm group-hover/item:underline\">{currentUser?.name}</p>\r\n        </div>\r\n      </div>\r\n      <hr className=\"bg-gray-600 border-0 h-px my-4\" />\r\n      <div onClick={() => signOut()} className=\"px-3 text-center text-white text-sm hover:underline\">\r\n        Sign out of Netflix\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountMenu;","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\Billboard.tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\FavoriteButton.tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\Input.tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\MobileMenu.tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\MovieCard.tsx",["141","142"],[],"import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { BsFillPlayFill } from 'react-icons/bs';\r\nimport FavoriteButton from \"./FavoriteButton\";\r\n\r\ninterface MovieCardProps {\r\n  data: Record<string, any>;\r\n}\r\n\r\nconst MovieCard: React.FC<MovieCardProps> = ({ data }) => {\r\n  const router = useRouter();\r\n    return (\r\n    <div className=\"group bg-zinc-900 col-span relative h-[12vw]\">\r\n      <img\r\n        className=\"\r\n        cursor-pointer\r\n        object-cover\r\n        transition\r\n        duration\r\n        shadow-xl\r\n        group-hover:opacity-90\r\n        sm:group-hover:opacity-0\r\n        delay-300\r\n        w-full\r\n        h-[12vw]\r\n        \"\r\n        src={data.thumbnailUrl}\r\n        alt=\"Thumbnail\"\r\n      />\r\n      <div\r\n        className=\"\r\n        opacity-0\r\n        absolute\r\n        top-0 \r\n        transition\r\n        duration-200\r\n        z-10\r\n        invisible\r\n        sm:visible\r\n        delay-300\r\n        w-full\r\n        scale-0\r\n        group-hover:scale-110\r\n        group-hover:-translate-y-[6vw]\r\n        group-hover:translate-x-[2vw]\r\n        group-hover:opacity-100\r\n        \"\r\n      >\r\n        <img\r\n          className=\"\r\n            cursor-pointer\r\n            object-cover\r\n            transition\r\n            shadow-xl\r\n            rounded-t-md\r\n            w-full\r\n            h-[12vw]\r\n            \"\r\n          src={data.thumbnailUrl}\r\n          alt=\"Thumbnail\"\r\n        />\r\n\r\n        <div\r\n        className=\"\r\n        z-10 \r\n        bg-zinc-800\r\n        p-2\r\n        lg:p-4\r\n        absolute\r\n        w-full\r\n        transition\r\n        shadow-md\r\n        rounded-b-md\r\n        \"\r\n        >\r\n            \r\n            <div className=\"flex flex-row items-center gap-3\">\r\n                <div className=\"\r\n                cursor-pointer\r\n                w-6\r\n                h-6\r\n                lg:w-10\r\n                lg:h-10\r\n                bg-white\r\n                rounded-full\r\n                flex\r\n                justify-center\r\n                items-center\r\n                transition\r\n                hover:bg-neutral-300\r\n                \" onClick={() => router.push(`/watch/${data?.id}`)}>\r\n                    <BsFillPlayFill size={30}/>\r\n                </div>\r\n                <FavoriteButton movieId={data?.id}/>\r\n            </div>\r\n\r\n            <p className=\"text-green-400 font-semibold mt-4\">\r\n                New <span className=\"text-white\">2023</span>\r\n            </p>\r\n\r\n            <div className=\"flex flex-row mt-4 gap-2 items-center\">\r\n                <p className=\"text-white text-[10px] lg:text-sm\">{data.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"flex flex-row mt-4 gap-2 items-center\">\r\n                <p className=\"text-white text-[10px] lg:text-sm\">{data.genre}</p>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\MovieList.tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\Navbar.tsx",["143","144"],[],"import React from \"react\";\r\nimport NavbarItem from \"./NavbarItem\";\r\nimport { BsChevronDown, BsSearch, BsBell } from \"react-icons/bs\";\r\nimport MobileMenu from \"./MobileMenu\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport AccountMenu from \"./AccountMenu\";\r\n\r\nconst TOP_OFFSET = 66;\r\n\r\nconst Navbar = () => {\r\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\r\n  const [showAccountMenu, setshowAccountMenu] = useState(false);\r\n  const [ShowBackground, setShowBackground] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (window.scrollY >= TOP_OFFSET) {\r\n        setShowBackground(true);\r\n      } else {\r\n        setShowBackground(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const toggleMobileMenu = useCallback(() => {\r\n    setShowMobileMenu((current) => !current);\r\n  }, []);\r\n  const toggleAccountMenu = useCallback(() => {\r\n    setshowAccountMenu((current) => !current);\r\n  }, []);\r\n  return (\r\n    <nav className=\"w-full fixed z-40\">\r\n      <div\r\n        className=\r\n        {`\r\n        px-4\r\n        md:px-16\r\n        py-6\r\n        flex\r\n        flex-row\r\n        items-center\r\n        transition\r\n        duration-500\r\n        ${ShowBackground ? 'bg-zinc-900 bg-opacity-90' : ''}\r\n        `}\r\n        \r\n      >\r\n        <img className=\"h-4 lg:h-7\" src=\"/images/logo.png\" alt=\"Logo\" />\r\n        <div\r\n          className=\"\r\n            flex-row\r\n            ml-8\r\n            gap-7\r\n            hidden\r\n            lg:flex\r\n            \"\r\n        >\r\n          <NavbarItem label=\"Home\" />\r\n          <NavbarItem label=\"Series\" />\r\n          <NavbarItem label=\"Films\" />\r\n          <NavbarItem label=\"New & Popular\" />\r\n          <NavbarItem label=\"My List\" />\r\n          <NavbarItem label=\"Browse by languages\" />\r\n        </div>\r\n        <div\r\n          onClick={toggleMobileMenu}\r\n          className=\"lg:hidden flex flex-row items-center gap-2 ml-8 cursor-pointer relative\"\r\n        >\r\n          <p className=\"text-white text-sm\">Browse</p>\r\n          <BsChevronDown\r\n            className={`text-white transition ${\r\n              showMobileMenu ? \"rotate-180\" : \"rotate-0\"\r\n            }`}\r\n          />\r\n          <MobileMenu visible={showMobileMenu} />\r\n        </div>\r\n        <div className=\"flex flex-row ml-auto gap-7 items-center\">\r\n          <div className=\"text-gray-200 hover:text-gray-300 cursor-pointer transition\">\r\n            <BsSearch />\r\n          </div>\r\n          <div className=\"text-gray-200 hover:text-gray-300 cursor-pointer transition\">\r\n            <BsBell />\r\n          </div>\r\n          <div\r\n            onClick={toggleAccountMenu}\r\n            className=\"flex flex-row items-center gap-2 cursor-pointer relative\"\r\n          >\r\n            <div className=\"w-6 h-6 lg:w-10 lg:h-10 rounded-md overflow-hidden\">\r\n              <img src=\"/images/default-blue.png\" alt=\"\" />\r\n            </div>\r\n            <BsChevronDown\r\n              className={`text-white transition ${\r\n                showAccountMenu ? \"rotate-180\" : \"rotate-0\"\r\n              }`}\r\n            />\r\n            <AccountMenu visible={showAccountMenu} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\NavbarItem.tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\components\\PlayButton.tsx",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\lib\\fetcher.ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\lib\\prismadb.ts",[],[],"E:\\VISUAL STUDIO CODE\\netflix\\netflix-clone\\lib\\serverAuth.ts",[],[],{"ruleId":"145","severity":1,"message":"146","line":49,"column":11,"nodeType":"147","endLine":49,"endColumn":58},{"ruleId":"148","severity":1,"message":"149","line":49,"column":11,"nodeType":"147","endLine":49,"endColumn":58},{"ruleId":"145","severity":1,"message":"146","line":48,"column":29,"nodeType":"147","endLine":48,"endColumn":81},{"ruleId":"145","severity":1,"message":"146","line":21,"column":11,"nodeType":"147","endLine":21,"endColumn":83},{"ruleId":"145","severity":1,"message":"146","line":14,"column":7,"nodeType":"147","endLine":29,"endColumn":9},{"ruleId":"145","severity":1,"message":"146","line":49,"column":9,"nodeType":"147","endLine":61,"endColumn":11},{"ruleId":"145","severity":1,"message":"146","line":54,"column":9,"nodeType":"147","endLine":54,"endColumn":73},{"ruleId":"145","severity":1,"message":"146","line":95,"column":15,"nodeType":"147","endLine":95,"endColumn":60},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]